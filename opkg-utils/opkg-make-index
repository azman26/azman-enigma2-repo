#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# opkg-make-index: Generate an index file for an opkg repository
# Modified to skip broken packages and not require Size/Installed-Size
#

import sys
import os
import opkg

def generate_index(dirpath):
    pkg_list = []
    filenames = os.listdir(dirpath)
    filenames.sort()

    for filename in filenames:
        if not filename.endswith('.ipk'):
            continue

        filepath = os.path.join(dirpath, filename)
        if not os.path.isfile(filepath):
            continue

        try:
            pkg = opkg.Package(filepath)
        except ValueError as e:
            sys.stderr.write(f"⚠️  Pomijam uszkodzony plik {filename} — {e}\n")
            continue
        except Exception as e:
            sys.stderr.write(f"⚠️  Błąd odczytu {filename}: {e}\n")
            continue

        # Wymagamy tylko pola Package, reszta może być pusta
        if not pkg.package or pkg.package.strip() == "":
            sys.stderr.write(f"⚠️  Pomijam plik '{filename}' — brak pola Package.\n")
            continue

        pkg_list.append(pkg)

    # Sortowanie po nazwie pakietu (case-insensitive)
    pkg_list.sort(key=lambda p: p.package.lower())

    # Wypisanie zawartości indexu
    for pkg in pkg_list:
        sys.stdout.write(pkg.make_index_entry())
        sys.stdout.write("\n")  # pusty wiersz między pakietami

def main():
    if len(sys.argv) != 2:
        sys.stderr.write(f"Użycie: {sys.argv[0]} <katalog_z_paczkami>\n")
        sys.exit(1)

    dirpath = sys.argv[1]

    if not os.path.isdir(dirpath):
        sys.stderr.write(f"Błąd: {dirpath} nie jest katalogiem.\n")
        sys.exit(1)

    generate_index(dirpath)

if __name__ == '__main__':
    main()
