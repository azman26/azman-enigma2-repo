name: Build OPKG Index and Deploy to gh-pages branch

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fix script line endings
        run: |
          sudo apt-get update
          sudo apt-get install -y dos2unix
          dos2unix ./opkg-utils/opkg-make-index

      - name: Make opkg-make-index executable
        run: chmod +x ./opkg-utils/opkg-make-index
        shell: bash

      - name: Generate OPKG Indexes
        run: |
          for arch_dir in all armv7ahf-neon mips32el; do
            if [ -d "$arch_dir" ]; then
              echo "‚úÖ Found and processing directory: $arch_dir"
              ./opkg-utils/opkg-make-index "$arch_dir" > "$arch_dir/Packages"
              gzip -c "$arch_dir/Packages" > "$arch_dir/Packages.gz"
              rm "$arch_dir/Packages"
            else
              echo "‚ÑπÔ∏è Directory $arch_dir does not exist, skipping."
            fi
          done
        shell: bash

      - name: Validate generated Packages.gz files
        run: |
          for arch_dir in all armv7ahf-neon mips32el; do
            if [ -f "$arch_dir/Packages.gz" ]; then
              echo "üîç Checking $arch_dir/Packages.gz..."
              if [ ! -s "$arch_dir/Packages.gz" ]; then
                echo "‚ùå ERROR: $arch_dir/Packages.gz is empty!"
                exit 1
              fi
              PKG_COUNT=$(gunzip -c "$arch_dir/Packages.gz" | grep -c "^Package:")
              if [ "$PKG_COUNT" -eq 0 ]; then
                echo "‚ùå ERROR: $arch_dir/Packages.gz does not contain any package entries!"
                exit 1
              fi
              echo "‚úÖ $arch_dir/Packages.gz is valid ‚Äî found $PKG_COUNT packages."
            else
              echo "‚ö†Ô∏è WARNING: $arch_dir/Packages.gz not found, skipping."
            fi
          done
        shell: bash

      - name: Generate custom HTML index file
        run: |
          echo '<!DOCTYPE html>' > index.html
          echo '<html lang="pl">' >> index.html
          echo '<head>' >> index.html
          echo '  <meta charset="UTF-8" />' >> index.html
          echo '  <title>Repozytorium OPKG - Azman</title>' >> index.html
          echo '</head>' >> index.html
          echo '<body>' >> index.html
          echo '  <h1>üì¶ Repozytorium OPKG dla Enigma2</h1>' >> index.html
          echo '  <p>Aby dodaƒá repozytorium, po≈ÇƒÖcz siƒô z tunerem przez SSH i wykonaj komendƒô:</p>' >> index.html
          echo '  <pre><code>echo "src/gz azman-repo-all https://azman26.github.io/azman-enigma2-repo/all" > /etc/opkg/azman.conf</code></pre>' >> index.html
          echo '  <h2>Dostƒôpne architektury</h2>' >> index.html
          echo '  <ul>' >> index.html
          if [ -d "all" ]; then echo '    <li><a href="all/">all/</a> ‚Äì pakiety niezale≈ºne od architektury (sk√≥rki, picony, wtyczki python)</li>' >> index.html; fi
          if [ -d "armv7ahf-neon" ]; then echo '    <li><a href="armv7ahf-neon/">armv7ahf-neon/</a> ‚Äì pakiety dla procesor√≥w ARM</li>' >> index.html; fi
          if [ -d "mips32el" ]; then echo '    <li><a href="mips32el/">mips32el/</a> ‚Äì pakiety dla procesor√≥w MIPS</li>' >> index.html; fi
          echo '  </ul>' >> index.html
          echo '  <h2>Instalacja pakiet√≥w</h2>' >> index.html
          echo '  <pre><code># Zaktualizuj listƒô pakiet√≥w' >> index.html
          echo 'opkg update' >> index.html
          echo '# Zainstaluj wybrany pakiet (np. AzmanPanel)' >> index.html
          echo 'opkg install enigma2-plugin-extensions-AzmanPanel' >> index.html
          echo '</code></pre>' >> index.html
          echo '  <p>Repozytorium przygotowane przez <strong>azman</strong>.</p>' >> index.html
          echo '</body>' >> index.html
          echo '</html>' >> index.html
        shell: bash

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          force_orphan: true
